@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject System.Security.Claims.ClaimsPrincipal CurrentUser


<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">PixelBot.Orchestrator</a>
    <button class="navbar-toggler" onclick="@ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" onclick="@ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        @*<li class="nav-item px-3">
                <NavLink class="nav-link" href="counter">
                    <span class="oi oi-plus" aria-hidden="true"></span> Counter
                </NavLink>
            </li>*@

        @if (AuthorizationService.Authorize(CurrentUser, Services.Policy.GlobalAdmin))
        {

            <li class="nav-item px-3">
                <NavLink class="nav-link" href="CurrentChannels">
                    <span class="oi oi-chat" aria-hidden="true"></span> Current Channels
                </NavLink>
            </li>

        }

    </ul>
</div>

@functions {
    bool collapseNavMenu = true;

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
