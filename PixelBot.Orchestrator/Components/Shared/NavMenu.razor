@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject System.Security.Claims.ClaimsPrincipal CurrentUser
@inject NavigationManager NavManager


<div class="top-row">
	<a class="brand" href="">FritzBot</a>
	<button class="navbar-toggler" @onclick="ToggleNavMenu">
		<span class="navbar-toggler-icon"></span>
	</button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
	<ul class="nav flex-column">
		<li class="nav-item ">
			<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
				<span class="oi oi-home" aria-hidden="true"></span> Home
			</NavLink>
		</li>

		<li class="nav-item">
			<NavLink class="nav-link" href="About" Match="NavLinkMatch.All">
				<span class="oi oi-info" aria-hidden="true"></span> About
			</NavLink>
		</li>

		@if (CurrentUser.Identity.IsAuthenticated)
		{
			<li class="nav-item">
				<NavLink class="nav-link" href="Configuration" Match="NavLinkMatch.All">
					<span class="oi oi-cog" aria-hidden="true"></span> Configuration
				</NavLink>
			</li>
		}

		@if (AuthorizationService.Authorize(CurrentUser, Services.Policy.GlobalAdmin))
		{

			<li class="nav-item">
				<NavLink class="nav-link" href="CurrentChannels">
					<span class="oi oi-chat" aria-hidden="true"></span> Current Channels
				</NavLink>
			</li>

		}

	</ul>

	<ul class="nav login">

		@if (CurrentUser.Identity.IsAuthenticated)
		{
			<li class="nav-item ">
				<a href="" @onclick="@(() => NavManager.NavigateTo(" /Account/Profile"))">Hello @CurrentUser.Identity.Name!</a>
			</li>
			<li class="nav-item ">
				<a href="" @onclick="@(() => NavManager.NavigateTo(" /Account/Logout", true))">Logout</a>
			</li>
		}
		else
		{
			<li class="nav-item ">
				<a href="" @onclick="@(() => NavManager.NavigateTo(" /Account/Login", true))">Login</a>
			</li>
		}

	</ul>

</div>

@code {
	bool collapseNavMenu = true;

	string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

	void ToggleNavMenu()
	{
		collapseNavMenu = !collapseNavMenu;
	}
}
